# Use root/example as user/password credentials
version: '3.2'

services:

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}

    networks:
      - mongo-compose-network
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro


  mongo-express:
        image: mongo-express
        restart: always
        environment:
            ME_CONFIG_MONGODB_SERVER: mongo
            ME_CONFIG_MONGODB_PORT: 27017
            ME_CONFIG_MONGODB_ENABLE_ADMIN: false
            ME_CONFIG_MONGODB_AUTH_DATABASE: admin
            ME_CONFIG_MONGODB_AUTH_USERNAME: ${MONGO_ROOT_USER}
            ME_CONFIG_MONGODB_AUTH_PASSWORD: ${MONGO_ROOT_PASSWORD}
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
            ME_CONFIG_BASICAUTH_USERNAME: ${MONGOEXPRESS_LOGIN}
            ME_CONFIG_BASICAUTH_PASSWORD: ${MONGOEXPRESS_PASSWORD}
        depends_on:
            - mongo
        ports:
          - "8888:8081"
        networks:
          - mongo-compose-network
  rabbitmq:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - mongo-compose-network
networks:
  mongo-compose-network:
    driver: bridge