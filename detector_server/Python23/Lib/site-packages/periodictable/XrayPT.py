#!/usr/bin/env python

import Tkinter as Tk
import PeriodicTable
import EventHandler
import Selector
import Xray, XrayWidget


default_energy= 14.5

class XrayPT(Tk.Frame):

    def __init__(self, master=None, **kw):
        if not master:
            self.__isorphan= 1
            if Tk._default_root:
                self.master = Tk.Toplevel(Tk._default_root)
                self.__isroot= 0
            else:
                self.master = Tk.Tk(className='Periodic')
                self.__isroot= 1
        else:
            self.master= master
            self.__isorphan= 0
            self.__isroot= 0

	Tk.Frame.__init__(self, master, kw)

	self.__build_table()
	self.__build_option()
	self.__build_button()

        if self.__isorphan:
            self.pack(fill='both',expand='yes')
        if self.__isroot:
            self.master.mainloop()


    def __build_table(self):
	self.eh = EventHandler.EventHandler()
        self.pt = PeriodicTable.PeriodicTable(self, \
                        message='yes', messagecolor='red', messagefont='Helvetica -12 italic', \
                        title='Xray Properties', titlefont='Helvetica -20 bold', \
                        titlecolor='blue', symbolfont='Times -13 bold', numberfont='Arial -8', \
                        mode='single', \
                        eventhandler=self.eh)
        self.eh.register('ElementSelectEvent',self.select)
        #self.eh.register('ElementRemoveEvent',self.unselect)
        self.pt.grid(row=1, column=0, columnspan=12)

    def __build_option(self):
	optbox= Tk.Frame(self, name='optionbox', bd=2, relief='ridge')
	Tk.Label(optbox, text='Display:').pack(side='left', fill='both', expand='yes')
	self.xoptlabel= ['Xray properties and xsection', 
			 'Xray properties only', 
			 'Xray cross-section only']
	self.xoption= Selector.Selector(optbox, self.xoptlabel)
	self.xoption.pack(side='left', fill='both', expand='yes') 
	optbox.grid(row=2, column=2, columnspan=6, sticky='enws')

    def __build_button(self):
	btbox= Tk.Frame(self, name='buttonbox', bd=2, relief='ridge')
	Tk.Button(btbox, command=self.close, text='Close').pack(fill='both', expand='yes')
	btbox.grid(row=2, column=8, columnspan=2, sticky='enws')

    def select(self, event):
	dict= Xray.Xray()[event.number]
	opt= self.xoption.value.get()
	cnf= {}
	if opt==self.xoptlabel[0]:
	    app= XrayWidget.XrayCanvas(xray=dict, background='white', energy=default_energy)
	elif opt==self.xoptlabel[1]:	
	    app= XrayWidget.XrayCanvas(xray=dict, background='white', showxsection=0, energy=default_energy)
	elif opt==self.xoptlabel[2]:	
	    app= XrayWidget.XrayCanvas(xray=dict, background='white', showinfo=0, energy=default_energy)
	

    def close(self):
	self.destroy()
	if self.__isorphan:
	    self.master.destroy()

if __name__=='__main__':
    app= XrayPT()
    
