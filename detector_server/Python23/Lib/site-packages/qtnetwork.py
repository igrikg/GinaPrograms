# Python wrapper code.
#
# Generated by SIP 3.8 (build 109) on Mon Oct 13 13:17:43 2003
#
# Copyright (c) 2003
# 	Riverbank Computing Limited <info@riverbankcomputing.co.uk>
# 
# This file is part of PyQt.
# 
# This copy of PyQt is licensed for use under the terms of the Software
# License Agreement between Riverbank Computing Limited and The Kompany.com,
# Inc.  See the file LICENSE for more details.
# 
# PyQt is supplied WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

import libsip

from qt import QIODevice
from qt import QObject
import libqtnetworkc

libqtnetworkc.sipInitModule(__name__)

class QDns(QObject):
	def __init__(self,*args):
		libqtnetworkc.sipCallCtor(5,self,args)

	class MailServer:
		def __init__(self,*args):
			libqtnetworkc.sipCallCtor(4,self,args)
		def __getattr__(self,name):
			return libqtnetworkc.sipCallGetVar(4,self,name)
		def __setattr__(self,name,value):
			return libqtnetworkc.sipCallSetVar(4,self,name,value)

	class Server:
		def __init__(self,*args):
			libqtnetworkc.sipCallCtor(3,self,args)
		def __getattr__(self,name):
			return libqtnetworkc.sipCallGetVar(3,self,name)
		def __setattr__(self,name,value):
			return libqtnetworkc.sipCallSetVar(3,self,name,value)

class QHostAddress:
	def __init__(self,*args):
		libqtnetworkc.sipCallCtor(2,self,args)

class QServerSocket(QObject):
	def __init__(self,*args):
		libqtnetworkc.sipCallCtor(1,self,args)

class QSocket(QObject,QIODevice):
	def __init__(self,*args):
		libqtnetworkc.sipCallCtor(0,self,args)

# Register the classes with the C++ module.

libqtnetworkc.sipRegisterClasses()
